{"version":3,"sources":["counter.js","counterHooks.js","App.js","index.js"],"names":["Counter","props","state","count","initialCount","ThemeContext","Consumer","style","onClick","changeCount","amount","this","setState","prevState","Component","CounterHooks","useState","setCount","theme","useContext","prevCount","nextCount","React","createContext","App","setTheme","Provider","value","backgroundColor","prevTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAOF,EAAMG,cAJE,E,0CAOnB,WAAU,IAAD,OACP,OACE,cAACC,EAAaC,SAAd,UACG,SAACC,GAAD,OACC,gCACE,wBAAQA,MAAOA,EAAOC,QAAS,kBAAM,EAAKC,aAAa,IAAvD,eAGA,+BAAO,EAAKP,MAAMC,QAClB,wBAAQI,MAAOA,EAAOC,QAAS,kBAAM,EAAKC,YAAY,IAAtD,uB,yBASV,SAAYC,GACVC,KAAKC,UAAS,SAACC,GACb,MAAO,CACLV,MAAOU,EAAUV,MAAQO,U,GA7BII,aCAtB,SAASC,EAAT,GAAyC,IAAjBX,EAAgB,EAAhBA,aACrC,EAA0BY,mBAASZ,GAAnC,mBAAOD,EAAP,KAAcc,EAAd,KACMC,EAAQC,qBAAWd,GACzB,OACE,gCACE,wBACEE,MAAOW,EACPV,QAAS,kBAAMS,GAAS,SAACG,GAAD,OAAeA,EAAY,MAFrD,eAMA,+BAAOjB,IACP,wBACEI,MAAOW,EACPV,QAAS,kBAAMS,GAAS,SAACI,GAAD,OAAeA,EAAY,MAFrD,kBCZC,IAAMhB,EAAeiB,IAAMC,gBAsBnBC,MArBf,WACE,MAA0BR,mBAAS,OAAnC,mBAAOE,EAAP,KAAcO,EAAd,KACA,OACE,eAACpB,EAAaqB,SAAd,CAAuBC,MAAO,CAAEC,gBAAiBV,GAAjD,oBAEE,cAAC,EAAD,CAASd,aAAc,IAFzB,eAIE,cAACW,EAAD,CAAcX,aAAc,IAC5B,wBACEI,QAAS,kBACPiB,GAAS,SAACI,GACR,MAAqB,QAAdA,EAAsB,OAAS,UAH5C,8BCRNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d26d663.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { ThemeContext } from \"./App\"\r\n\r\nexport default class Counter extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      count: props.initialCount,\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {(style) => (\r\n          <div>\r\n            <button style={style} onClick={() => this.changeCount(-1)}>\r\n              -\r\n            </button>\r\n            <span>{this.state.count}</span>\r\n            <button style={style} onClick={() => this.changeCount(1)}>\r\n              +\r\n            </button>\r\n          </div>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    )\r\n  }\r\n\r\n  changeCount(amount) {\r\n    this.setState((prevState) => {\r\n      return {\r\n        count: prevState.count + amount,\r\n      }\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useContext } from \"react\"\r\nimport { ThemeContext } from \"./App\"\r\n\r\nexport default function CounterHooks({ initialCount }) {\r\n  const [count, setCount] = useState(initialCount)\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <div>\r\n      <button\r\n        style={theme}\r\n        onClick={() => setCount((prevCount) => prevCount - 1)}\r\n      >\r\n        -\r\n      </button>\r\n      <span>{count}</span>\r\n      <button\r\n        style={theme}\r\n        onClick={() => setCount((nextCount) => nextCount + 1)}\r\n      >\r\n        +\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\nimport Counter from \"./counter\"\nimport CounterHooks from \"./counterHooks\"\nexport const ThemeContext = React.createContext()\nfunction App() {\n  const [theme, setTheme] = useState(\"red\")\n  return (\n    <ThemeContext.Provider value={{ backgroundColor: theme }}>\n      Counter\n      <Counter initialCount={9} />\n      CounterHooks\n      <CounterHooks initialCount={8} />\n      <button\n        onClick={() =>\n          setTheme((prevTheme) => {\n            return prevTheme === \"red\" ? \"blue\" : \"red\"\n          })\n        }\n      >\n        Toggle Theme\n      </button>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}